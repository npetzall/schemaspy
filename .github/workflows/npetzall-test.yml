name: Npetzall Manual Test

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release [n.n.n]'
        required: true
      next_development_version:
        description: 'Next development version [n.n.n]'
        required: true

jobs:
  release:
    if: ${{ github.repository_owner == 'npetzall' }}
    runs-on: ubuntu-latest

    steps:
      - name: Check Inputs
        run: [[ "${{ github.event.inputs.release_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && [[ "${{ github.event.inputs.next_development_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]
      - uses: actions/checkout@v2
        if: success()
        with:
          fetch-depth: 0
          ref: github_actions
      - uses: nelonoel/branch-name@1ea5c86cb559a8c4e623da7f188496208232e49f
        if: success()
      - name: Setup JDK 11
        if: success()
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Graphviz
        if: success()
        run: sudo apt-get install graphviz
      - name: Cache Maven packages
        if: success()
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        if: success()
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Create/Update draft
        if: success()
        uses: npetzall/release-ready-action@82794515cee7889ff4f67cd3d5a110eae96bbbfd
        id: drafting
        with:
          draft-tag: "v${{ github.event.inputs.release_version }}"
          template: "./.github/release-ready/releasenote.dot"
          update-draft: false
      - name: Print release notes
        run: echo "${{ steps.drafting.outputs.release-notes }}"
      - name: Maven release
        if: success()
        run: >
          ./mvnw
          --batch-mode
          --errors
          --show-version
          release:prepare
          -DdryRun=true
          -DreleaseVersion=${{ github.event.inputs.release_version }}
          -DdevelopmentVersion=${{ github.event.inputs.next_development_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}