#
# Copyright (C) 2018 Nils Petzaell
#
# This file is part of SchemaSpy.
#
# SchemaSpy is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SchemaSpy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with SchemaSpy. If not, see <http://www.gnu.org/licenses/>.
#
dbms=PostgreSQL
description=11 or later

extends=pgsql

tableTypes=TABLE,PARTITIONED TABLE

selectRoutinesSql=select \
r.routine_name || '(' || oidvectortypes(p.proargtypes) || ')' as routine_name, \
case p.prokind when 'f' then 'FUNCTION' when 'p' then 'PROCEDURE' when 'a' then 'AGGREGATE' when 'w' then 'WINDOW' else 'UNKNOWN' end as routine_type, \
case when p.proretset then 'SETOF ' else '' end || case when r.data_type = 'USER-DEFINED' then r.type_udt_name else r.data_type end as dtd_identifier, \
r.external_language as routine_body,\
r.routine_definition, \
r.sql_data_access, \
r.security_type, \
r.is_deterministic, \
d.description as routine_comment \
from information_schema.routines r \
left join pg_namespace ns on r.routine_schema = ns.nspname \
left join pg_proc p on r.specific_name = p.proname || '_' || p.oid \
left join pg_description d on d.objoid = p.oid \
where r.routine_schema = :schema
selectRoutineParametersSql=select \
r.routine_name || '(' || oidvectortypes(pp.proargtypes) || ')' as specific_name, \
coalesce(p.parameter_name, '$' || p.ordinal_position) as parameter_name, \
p.data_type as dtd_identifier, \
p.parameter_mode \
from information_schema.parameters p \
left join information_schema.routines r on r.specific_name = p.specific_name \
left join pg_proc pp on r.specific_name = pp.proname || '_' || pp.oid \
where p.specific_schema = :schema \
order by p.specific_name, p.ordinal_position
